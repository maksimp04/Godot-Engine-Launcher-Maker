[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends HSlider
tool

export var text := \"\" setget set_text

signal _ready
var _ready := false

func _notification(what):
	if what == NOTIFICATION_ENTER_TREE and Engine.editor_hint:
		yield(get_tree(),\"idle_frame\")
		yield(get_tree(),\"idle_frame\")
	if what == NOTIFICATION_READY or what == NOTIFICATION_ENTER_TREE and Engine.editor_hint:
		_ready = true
		emit_signal(\"_ready\")

func set_t(_v:float):
	set_tooltip(str(value))
	get_tree().current_scene.changedSetting(text,value)

func ch():
	var mn := $HBoxContainer/min
	var mx := $HBoxContainer/max
	mn.set_text(str(min_value))
	mx.set_text(str(max_value))

func set_text(t:String):
	if _ready == false:
		yield(self,\"_ready\")
	text = t
	$Label.text = t
"

[node name="LauncherHSlider" type="HSlider"]
margin_right = 100.0
margin_bottom = 16.0
rect_min_size = Vector2( 100, 0 )
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="."]
margin_left = -5.0
margin_right = -5.0
grow_horizontal = 0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer" type="HBoxContainer" parent="."]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
rect_scale = Vector2( 1, 0.7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="min" type="Label" parent="HBoxContainer"]
margin_right = 48.0
margin_bottom = 14.0
size_flags_horizontal = 3
text = "0"
clip_text = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="max" type="Label" parent="HBoxContainer"]
margin_left = 52.0
margin_right = 100.0
margin_bottom = 14.0
size_flags_horizontal = 3
text = "100"
align = 2
clip_text = true

[connection signal="changed" from="." to="." method="ch"]
[connection signal="value_changed" from="." to="." method="set_t"]
